// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl      = env("DIRECT_URL")
}

model Meal {
  meal_id             Int @id @default(autoincrement())
  meal_image          String @default("")
  meal_name           String
  meal_calories       Int @default(0)
  meal_protein        Int @default(0)
  meal_carbohydrate   Int @default(0)
  meal_fat            Int @default(0)
  meal_ingredients    String
  meal_recipe         String
  is_breakfast        Boolean @default(false)
  is_lunch            Boolean @default(false)
  is_dinner           Boolean @default(false)
  is_snack            Boolean @default(false)
  mealDetails         MealPlanDetail[]
}

model MealPlan {
  meal_plan_id                  Int @id @default(autoincrement())
  user_id                       String
  meal_plan_date                DateTime
  meal_plan_total_calorie       Int @default(0)
  meal_plan_total_carbohydrate  Int @default(0)
  meal_plan_total_protein       Int @default(0)
  meal_plan_total_fat           Int @default(0)
  mealDetails     MealPlanDetail[]

  @@index([meal_plan_id, meal_plan_date])
}

model MealPlanDetail {
  meal_plan_detail_id  Int @id @default(autoincrement())
  meal_plan_id         Int
  meal_type_id         Int 
  meal_id              Int
  mealType             MealType @relation(fields: [meal_type_id], references: [meal_type_id])
  mealPlan             MealPlan @relation(fields: [meal_plan_id], references: [meal_plan_id])
  meal                 Meal     @relation(fields: [meal_id], references: [meal_id])
}

model MealType {
  meal_type_id             Int @id @default(autoincrement())
  meal_type_description    String
  mealDetails              MealPlanDetail[]
}

model UserBMR {
  user_bmr_id       Int @id @default(autoincrement())
  user_id           String
  user_bmr_date     DateTime
  user_weight       Float
  user_height       Float
  user_age          Int
  user_bmr_value    Int
  user_gender       String
  activity_level_id Int
  goal_id           Int
  protein           Int
  carbohydrate      Int
  fat               Int

  activityLevel ActivityLevel @relation(fields: [activity_level_id], references: [activity_level_id])
  goal Goal @relation(fields: [goal_id], references: [goal_id])
}

model ActivityLevel {
  activity_level_id           Int @id @default(autoincrement())
  activity_level_code         String @default("")
  activity_level_multiplier   Float
  activity_level_description  String

  userBmrs UserBMR[]
}

model Goal {
  goal_id                       Int @id @default(autoincrement())
  goal_code                     String @default("")
  goal_description              String
  goal_calorie_multiplier       Float
  goal_protein_multiplier       Float
  goal_carbohydrate_multiplier  Float
  goal_fat_multiplier           Float

  userBmrs UserBMR[]
}